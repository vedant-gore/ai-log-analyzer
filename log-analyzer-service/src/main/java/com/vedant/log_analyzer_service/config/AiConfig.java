package com.vedant.log_analyzer_service.config;

import org.springframework.ai.chat.client.ChatClient;
import org.springframework.ai.chat.prompt.ChatOptions;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;

@Configuration
public class AiConfig {

    @Bean
    public ChatClient chatClient(ChatClient.Builder chatClientBuilder){

        ChatOptions feedbackChatOptions = ChatOptions
                .builder()
                .temperature(0.3)  //sets creativity, less gives factual
                .frequencyPenalty(0.5) //Penalizes using the same words again and again in the output. -2.0 to 2.0 (default 0)
                .presencePenalty(0.3) //Encourages talking about new topics instead of sticking to the same ideas repeatedly. -2.0 to 2.0 (default 0)
                .maxTokens(400)    // sets the total number of words in the output summary
                .build();

        // set the systems behaviour
        return chatClientBuilder
                .defaultOptions(feedbackChatOptions)
                .defaultSystem("You are a senior DevOps and system reliability expert. "
                        + "Your job is to analyze logs generated by various microservices in a distributed system. "
                        + "Given a set of logs, summarize the key events, identify any patterns of failures or errors, and explain possible root causes. "
                        + "Clearly indicate whether the logs suggest normal operation or potential issues. "
                        + "Keep the summary concise, technical, and useful for engineering teams investigating system health or failures.")
                .build();
    }
}

